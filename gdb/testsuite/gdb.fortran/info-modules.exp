# Copyright 2019 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file tests 'info modules', 'info module functions', and 'info
# module variables'.

load_lib "fortran.exp"

if { [skip_fortran_tests] } { continue }

standard_testfile info-types.f90 info-types-2.f90

if { [prepare_for_testing "failed to prepare" $testfile \
	  [list $srcfile $srcfile2] {debug f90}] } {
    return -1
}

if { ![runto MAIN__] } {
    perror "Could not run to breakpoint `MAIN__'."
    continue
}

set logical4 [fortran_logical4]
set integer4 [fortran_int4]
set real4 [fortran_real4]

# Test 'info modules' command.

gdb_test "info modules" \
    [multi_line \
	 "All defined modules:" \
	 "" \
	 "File .*${srcfile2}:" \
	 "18:\[\t \]+mod2" \
	 "" \
	 "File .*${srcfile}:" \
	 "16:\[\t \]+mod1" ]

gdb_test "info modules 1" \
    [multi_line \
	 "All modules matching regular expression \"1\":" \
	 "" \
	 "File .*${srcfile}:" \
	 "16:\[\t \]+mod1" ]

gdb_test "info modules 2" \
    [multi_line \
	 "All modules matching regular expression \"2\":" \
	 "" \
	 "File .*${srcfile2}:" \
	 "18:\[\t \]+mod2" ]

gdb_test "info modules mod" \
    [multi_line \
	 "All modules matching regular expression \"mod\":" \
	 "" \
	 "File .*${srcfile2}:" \
	 "18:\[\t \]+mod2" \
	 "" \
	 "File .*${srcfile}:" \
	 "16:\[\t \]+mod1" ]

# Test 'info module functions'.

gdb_test "info module functions" \
    [multi_line \
	 "All functions in all modules:" \
	 "" \
	 "Module \"mod2\":" \
	 "" \
	 "File .*${srcfile2}:" \
	 "22:\[\t \]+void mod2::sub_m2_a\\(${integer4}, ${logical4}\\);" \
	 "30:\[\t \]+${logical4} mod2::sub_m2_b\\(${real4}\\);" \
	 "" \
	 "Module \"mod1\":" \
	 "" \
	 "File .*${srcfile}:" \
	 "35:\[\t \]+void mod1::__copy_mod1_M1t1\\(Type m1t1, Type m1t1\\);" \
	 "25:\[\t \]+void mod1::sub_m1_a\\(${integer4}\\);" \
	 "31:\[\t \]+${integer4} mod1::sub_m1_b\\(void\\);" ]

gdb_test "info module functions -m mod1" \
    [multi_line \
	 "All functions in all modules matching regular expression \"mod1\":" \
	 "" \
	 "Module \"mod1\":" \
	 "" \
	 "File .*:" \
	 "35:\[\t \]+void mod1::__copy_mod1_M1t1\\(Type m1t1, Type m1t1\\);" \
	 "25:\[\t \]+void mod1::sub_m1_a\\(${integer4}\\);" \
	 "31:\[\t \]+${integer4} mod1::sub_m1_b\\(void\\);" ]

gdb_test "info module functions -t integer" \
    [multi_line \
	 "All functions with type matching regular expression \"integer\" in all modules:" \
	 "" \
	 "Module \"mod2\":" \
	 "" \
	 "File .*${srcfile2}:" \
	 "22:\[\t \]+void mod2::sub_m2_a\\(${integer4}, ${logical4}\\);" \
	 "" \
	 "Module \"mod1\":" \
	 "" \
	 "File .*${srcfile}:" \
	 "25:\[\t \]+void mod1::sub_m1_a\\(${integer4}\\);" \
	 "31:\[\t \]+${integer4} mod1::sub_m1_b\\(void\\);" ]

# Test 'info module variables'.

gdb_test "info module variables" \
    [multi_line \
	 "All variables in all modules:" \
	 "" \
	 "Module \"mod2\":" \
	 "" \
	 "File .*${srcfile2}:" \
	 "19:\[\t \]+${integer4} mod2::mod2_var_1;" \
	 "20:\[\t \]+${real4} mod2::mod2_var_2;" \
	 "" \
	 "Module \"mod1\":" \
	 "" \
	 "File .*${srcfile}:" \
	 "35:\[\t \]+Type m1t1 mod1::__def_init_mod1_M1t1;" \
	 "35:\[\t \]+Type __vtype_mod1_M1t1 mod1::__vtab_mod1_M1t1;" \
	 "21:\[\t \]+${real4} mod1::mod1_var_1;" \
	 "22:\[\t \]+${integer4} mod1::mod1_var_2;" ]

gdb_test "info module variables -t real" \
    [multi_line \
	 "All variables with type matching regular expression \"real\" in all modules:" \
	 "" \
	 "Module \"mod2\":" \
	 "" \
	 "File .*:" \
	 "20:\[\t \]+${real4} mod2::mod2_var_2;" \
	 "" \
	 "Module \"mod1\":" \
	 "" \
	 "File .*:" \
	 "21:\[\t \]+${real4} mod1::mod1_var_1;" ]

gdb_test "info module variables -m mod2" \
    [multi_line \
	 "All variables in all modules matching regular expression \"mod2\":" \
	 "" \
	 "Module \"mod2\":" \
	 "" \
	 "File .*${srcfile2}:" \
	 "19:\[\t \]+${integer4} mod2::mod2_var_1;" \
	 "20:\[\t \]+${real4} mod2::mod2_var_2;" ]

gdb_test "info module variables -m mod2 -t real" \
    [multi_line \
	 "All variables with type matching regular expression \"real\"" \
	 "	in all modules matching regular expression \"mod2\":" \
	 "" \
	 "Module \"mod2\":" \
	 "" \
	 "File .*${srcfile2}:" \
	 "20:\[\t \]+${real4} mod2::mod2_var_2;" ]

gdb_test "info module variables _1" \
    [multi_line \
	 "All variables matching regular expression \"_1\" in all modules:" \
	 "" \
	 "Module \"mod2\":" \
	 "" \
	 "File .*:" \
	 "19:\[\t \]+${integer4} mod2::mod2_var_1;" \
	 "" \
	 "Module \"mod1\":" \
	 "" \
	 "File .*:" \
	 "21:\[\t \]+${real4} mod1::mod1_var_1;" ]

